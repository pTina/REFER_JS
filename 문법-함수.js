/*

2022-04-10
문법 - 함수

-함수의 역할
함수를 묶는 것
함수를 활용하기 위해 묶는 것
코드란? 계산을 하는 것
즉, 함수는 어떤 목적의 계산을 하는 코드의 묶음
계산을 필요 할  때 호출하는 과정을 통해 수행시킬 수 있음
-> 나온 결과를 받아볼 수 있는 문법 요소 => "함수"


*/

function myFn(){
    return 100;
}

const result = myFn();

/*
17번 ~21번 코드 실행 순서
기본적인 함수의 매커니즘

1. 함수를 만든다.
2. 함수가 호출된다.
3. 함수에 진입해서 계산한다.
4. 함수에서 값을 반환한다.
5. result에 반환 값을 할당한다.

*/

/* 

외부로부터 입력을 받는 값: 인자
괄호 안에 기술한다.
=> 가장 기본적인 형태

*/
// 값이 아닌 함수 정의문
// 세미콜론이 붙지 않음
function myFn(x){
    return x + 100;
}

const result = myFn(10); // 110

/*
자바스크립트의 함수는 유연성이 뛰어남
다양한 형태를 가지고 있음

1. 함수가 이름이 없을 수 있다. "이름 없는 함수, 익명 함수"

함수를 호출하는 방법: 이름을 가지고 호출함
=> 이름이 없으면? 함수를 호출할 수 없다.
=> 그럼 의미 없는거 아닌가?
자바스크립트는 언어 레벨에서 함수를 값으로 취급
값으로 취급한다 => 변수에 넣을 수 있다.

익명함수는 반드시 변수에 넣어야 사용할 수 있다.
*/

// myFnV2는 함수의 이름을 대신하게 된다.
// 함수를 값으로 취급하여 대입문으로 등장
// 값, 식 => 세미콜론으로 끝나야함
const myFnV2 = function () {
    return 10;
};

myFnV2();

/*
자바스크립트의 세미콜론은 자동으로 찍어줌
타이핑해주지 않아도 오류가 발생하지 않음

*/
/*



*/
/**/
/**/
/**/
/**/